version: '3.8'

services:
  db:
    image: postgres
    environment:
      - "POSTGRES_USER=postgres"
      - "POSTGRES_PASSWORD=postgres"
    networks:
      - webssh
  redis:
    image: redis
    command: redis-server --save 20 1 --loglevel warning
    ports:
      - 6379:6379
    networks:
      - webssh
  app:
    build: .
    ports:
    - "3000:3000"
    environment:
      - DATABASE_URL=postgres://postgres:postgres@db/postgres
      - REDIS_URL=redis://redis:6379
      - SECRET_KEY_BASE=0c5bbac11156530c24e2c40abc914e9493219df6be4a40d23829259ff99b0bf42abcfab65a46ac2c7a2d18371226fe5eeb39e6fafa59f293ba1bc5e6bc34e413
    labels:
      - "traefik.enable=true"
      # Hosts
      - "traefik.http.services.icoder_app.loadbalancer.server.port=3000"
      - "traefik.http.routers.icoder_app-http.rule=Host(`icoder.tw`)"
      - "traefik.http.routers.icoder_app-http.entrypoints=web"
      # - "traefik.http.routers.icoder_app-http.middlewares=https-redirect@docker"
      - "traefik.http.routers.icoder_app-https.rule=Host(`icoder.tw`)"
      - "traefik.http.routers.icoder_app-https.entrypoints=websecure"
      - "traefik.http.routers.icoder_app-https.tls=true"
      - "traefik.http.routers.icoder_app-https.tls.certresolver=letsencrypt"
    networks:
      - webssh
    volumes:
      - .:/app
      - /home/docker/id_key:/root/.ssh/
      - /var/run/docker.sock:/var/run/docker.sock
      - ~/database/data:/var/lib/postgresql/data
    depends_on:
      - db
      - redis

networks:
  webssh:
    name: webssh
